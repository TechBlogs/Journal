Imagine that you are trying to punch a hole through a thick cardboard with a pencil. 
Which is the hardest part? Which particular task takes the most amount of time?
Try to visualize that moment when the tip of the pencil's lid JUST pierces through the cardboard, making a very small hole.
From that point on, does the rest of the job become easier?
I think it is much easier to push your pencil through an already existing hole. Pushing the pencil in makes this hole bigger.
But the initial force - that which is used on the pencil to at least introduce a small hole into the cardboard, is what
takes the most effort. What I think is that to push a pencil through an already existing hole takes us from 1 to N.
But to make that initial effort to introduce a hole is what takes us from 0 to 1 (This entry is screaming "Thiel! Thiel!").

I've been thinking lately - is programming a commodity? has the evolution of tools and techniques made it so easy to develop
software that even a toaster can produce quality software? After a lot of reading and experience in this field, I think NOT.
In fact, there are strong arguments backing the idea that programming is not a commodity.

So if development is not a commodity yet, I wonder whether is CAN be commoditized some day? What if a day arrives when a 
teenager interested in propulsion engines would not have to learn MATLAB or OCTAVE to perform his calculations? Instead, he
has a massive number of virtual assistance tools at his disposal who will write the code for him and produce the results of 
calculations, so he can focus on what matters to him, instead of sitting down with a book on Matlab first.
